{"ast":null,"code":"var _jsxFileName = \"/Users/wassimmouloud/coding_projects/projet_web/client/src/components/SearchCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { movie_genres, tv_genres } from '../utils/genres';\nimport httpClient from '../httpClient';\nimport useAuth from '../hooks/useAuth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchCard({\n  movie,\n  index,\n  hovered,\n  setHovered,\n  hoveredMovieId,\n  setHoveredMovieId,\n  handleMouseEnter,\n  handleMouseLeave\n}) {\n  _s();\n  const [isInWatchlist, setIsInWatchlist] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    user,\n    isLoading\n  } = useAuth();\n  useEffect(() => {\n    const fetchWatchlist = async () => {\n      try {\n        setLoading(true); // Assuming setLoading controls a loading indicator\n\n        // Fetch both movies and series watchlists simultaneously\n        const [moviesResponse, seriesResponse] = await Promise.all([httpClient.get('//localhost:8000/watchlist/movies'), httpClient.get('//localhost:8000/watchlist/series')]);\n\n        // Check if responses are successful\n        if (moviesResponse.status === 200 && seriesResponse.status === 200) {\n          const moviesWatchlist = moviesResponse.data;\n          const seriesWatchlist = seriesResponse.data;\n          // console.log(movie.id)\n\n          // Check if the movie is in the movie watchlist\n          const isMovieInMoviesWatchlist = moviesWatchlist.some(watchlistMovie => watchlistMovie.id == movie.id);\n          // Check if the movie is in the series watchlist\n          const isMovieInSeriesWatchlist = seriesWatchlist.some(watchlistSeries => watchlistSeries.id == movie.id);\n\n          // Update state based on whether the movie is in either list\n          setIsInWatchlist(isMovieInMoviesWatchlist || isMovieInSeriesWatchlist);\n        } else {\n          alert('Failed to fetch watchlist');\n        }\n      } catch (error) {\n        console.error('Error fetching watchlists', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWatchlist();\n  }, []);\n  const handleAddMovieToWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    // Check if user information is still loading\n    if (isLoading) {\n      alert(\"Checking user status...\");\n      return;\n    }\n\n    // Ensure the user is logged in\n    if (!user) {\n      alert(\"Please log in to add movies to your watchlist.\");\n      return;\n    }\n    try {\n      const response = await httpClient.post('//localhost:8000/watchlist/movies/add', {\n        id: movie.id,\n        title: movie.title,\n        overview: movie.overview,\n        poster_path: movie.poster_path,\n        backdrop_path: movie.backdrop_path,\n        original_language: movie.original_language,\n        release_date: movie.release_date,\n        vote_average: movie.vote_average,\n        vote_count: movie.vote_count,\n        popularity: movie.popularity,\n        genre_ids: movie.genre_ids\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n      } else {\n        alert(response.data.error || 'Failed to add movie');\n      }\n    } catch (error) {\n      console.error(\"Error adding movie to watchlist: \", error);\n      alert(\"Failed to add movie to watchlist.\");\n    }\n  };\n  const handleAddSeriesToWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (isLoading) {\n      alert(\"Checking user status...\");\n      return;\n    }\n    if (!user) {\n      alert(\"Please log in to add series to your watchlist.\");\n      return;\n    }\n    try {\n      const response = await httpClient.post('//localhost:8000/watchlist/series/add', {\n        id: movie.id,\n        name: movie.name,\n        overview: movie.overview,\n        poster_path: movie.poster_path,\n        backdrop_path: movie.backdrop_path,\n        original_language: movie.original_language,\n        first_air_date: movie.first_air_date,\n        vote_average: movie.vote_average,\n        vote_count: movie.vote_count,\n        popularity: movie.popularity,\n        genre_ids: movie.genre_ids\n      }, {\n        withCredentials: true\n      });\n      console.log(response.data);\n      if (response.status === 201) {\n        setIsInWatchlist(true);\n      } else {\n        alert(response.data.error || 'Failed to add series');\n      }\n    } catch (error) {\n      console.error(\"Error adding series to watchlist: \", error);\n      alert(\"Failed to add series to watchlist.\");\n    }\n  };\n  const handleRemoveMovieFromWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const response = await httpClient.post('//localhost:8000/watchlist/movies/remove', {\n      id: movie.id\n    });\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n    } else {\n      alert(response.data.error || 'Failed to remove movie');\n    }\n  };\n  const handleRemoveSeriesFromWatchlist = async e => {\n    e.preventDefault();\n    e.stopPropagation();\n    const response = await httpClient.post('//localhost:8000/watchlist/series/remove', {\n      id: movie.id\n    });\n    if (response.status === 200) {\n      setIsInWatchlist(false);\n    } else {\n      alert(response.data.error || 'Failed to remove series');\n    }\n  };\n  const toggleWatchlist = e => {\n    if (isInWatchlist) {\n      'release_date' in movie ? handleRemoveMovieFromWatchlist(e) : handleRemoveSeriesFromWatchlist(e);\n    } else {\n      'release_date' in movie ? handleAddMovieToWatchlist(e) : handleAddSeriesToWatchlist(e);\n    }\n  };\n  const watchlistLabel = isInWatchlist ? '-' : '+';\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: `${'release_date' in movie ? `/MovieDetail/${movie.id}` : `/SeriesDetail/${movie.id}`}`,\n    layout: true,\n    className: `group relative fade h-[220px] md:h-[220px] lg:h-[245px]  rounded-[7px] bg-[#16181f] cursor-pointer transition-transform duration-500 ${hovered && movie.id === hoveredMovieId ? 'lg:hover:scale-x-[1.7] lg:hover:scale-y-[1.4] lg:hover:z-[99]' : ''} ${index % 6 === 0 ? 'lg:origin-left' : ''} ${index % 6 === 5 && index !== 0 ? 'lg:origin-right' : ''} `,\n    onMouseEnter: () => handleMouseEnter(movie.id),\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      alt: \"\",\n      className: `skeleton rounded-[5px] h-full w-full ${hovered && movie.id === hoveredMovieId ? 'lg:hidden' : ''}    `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      loading: \"lazy\",\n      src: `https://image.tmdb.org/t/p/w780${movie.backdrop_path}`,\n      alt: \"\",\n      className: `skeleton w-full object-cover rounded-[5px] h-[40%] absolute top-0 opacity-0 ${hovered && movie.id === hoveredMovieId ? 'lg:group-hover:opacity-100   lg:flex ' : ''} `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `lg:mt-[50%] flex-col items-start justify-between h-[calc(60%-16px)] hidden w-full py-2 px-2 mt-1 ${hovered && movie.id === hoveredMovieId ? 'lg:group-hover:flex' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 w-[95%]\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            window.open(`https://www.youtube.com/watch?v=rcBntNCD4ZY`, '_blank');\n          },\n          className: \"text-[8px] h-[30px] w-[135px] flex justify-center items-center gap-1 bg-[#d9d9da] rounded-[5px] lg:hover:scale-105 transition-all\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            loading: \"lazy\",\n            src: \"/images/dark-blue-play.png\",\n            alt: \"\",\n            className: \"w-2 h-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium text-[#16181f]\",\n            children: \"Watch Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => toggleWatchlist(e),\n          className: \"text-[8px] h-[30px] w-[30px] flex justify-center items-center bg-[rgba(40,42,49,255)] rounded-[5px] text-white lg:hover:scale-105 transition-all \",\n          children: watchlistLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-[10px] text-[#d9d9da] py-1\",\n        children: 'release_date' in movie ? movie.original_title : movie.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[95%] flex flex-col gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-1  items-center text-[8px] font-medium \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#d9d9da] text-[8px]\",\n            children: 'release_date' in movie ? typeof movie.release_date === 'string' ? movie.release_date.slice(0, 4) : null : typeof (movie === null || movie === void 0 ? void 0 : movie.first_air_date) === 'string' ? movie.first_air_date.slice(0, 4) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-[#a2a3a5] text-[9px]\",\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this), movie.genre_ids.slice(0, 2).map(genre_id => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-1 text-[8px]\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[#d9d9da]\",\n                children: 'release_date' in movie ? movie_genres[genre_id] : tv_genres[genre_id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-[#a2a3a5]\",\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center text-[#d9d9da] gap-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              loading: \"lazy\",\n              src: \"/images/star.png\",\n              alt: \"\",\n              className: \"w-2 h-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-[8px]\",\n              children: movie.vote_average && movie.vote_average.toString().slice(0, 3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-[#7c849b] text-[7px] flex-grow-0 flex-shrink-0 w-full\",\n          children: movie.overview.split(' ').slice(0, 22).join(' ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchCard, \"M157WRExhBeh9sYOToCP2dCxkJo=\", false, function () {\n  return [useAuth];\n});\n_c = SearchCard;\nexport default SearchCard;\nvar _c;\n$RefreshReg$(_c, \"SearchCard\");","map":{"version":3,"names":["React","useEffect","useState","Link","movie_genres","tv_genres","httpClient","useAuth","jsxDEV","_jsxDEV","SearchCard","movie","index","hovered","setHovered","hoveredMovieId","setHoveredMovieId","handleMouseEnter","handleMouseLeave","_s","isInWatchlist","setIsInWatchlist","loading","setLoading","user","isLoading","fetchWatchlist","moviesResponse","seriesResponse","Promise","all","get","status","moviesWatchlist","data","seriesWatchlist","isMovieInMoviesWatchlist","some","watchlistMovie","id","isMovieInSeriesWatchlist","watchlistSeries","alert","error","console","handleAddMovieToWatchlist","e","preventDefault","stopPropagation","response","post","title","overview","poster_path","backdrop_path","original_language","release_date","vote_average","vote_count","popularity","genre_ids","withCredentials","handleAddSeriesToWatchlist","name","first_air_date","log","handleRemoveMovieFromWatchlist","handleRemoveSeriesFromWatchlist","toggleWatchlist","watchlistLabel","to","layout","className","onMouseEnter","onMouseLeave","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","open","original_title","slice","map","genre_id","toString","split","join","_c","$RefreshReg$"],"sources":["/Users/wassimmouloud/coding_projects/projet_web/client/src/components/SearchCard.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { movie_genres,tv_genres } from '../utils/genres';\nimport httpClient from '../httpClient';\nimport useAuth from '../hooks/useAuth';\n\nfunction SearchCard({movie, index, hovered, setHovered, hoveredMovieId, setHoveredMovieId, handleMouseEnter, handleMouseLeave}) {\n\n    const [isInWatchlist, setIsInWatchlist] = useState(false);\n    const [loading, setLoading] = useState(true);\n    const { user, isLoading } = useAuth();\n\n\n    useEffect(() => {\n        const fetchWatchlist = async () => {\n            try {\n                setLoading(true); // Assuming setLoading controls a loading indicator\n    \n                // Fetch both movies and series watchlists simultaneously\n                const [moviesResponse, seriesResponse] = await Promise.all([\n                    httpClient.get('//localhost:8000/watchlist/movies'),\n                    httpClient.get('//localhost:8000/watchlist/series')\n                ]);\n    \n                // Check if responses are successful\n                if (moviesResponse.status === 200 && seriesResponse.status === 200) {\n                    const moviesWatchlist = moviesResponse.data;\n                    const seriesWatchlist = seriesResponse.data;\n                    // console.log(movie.id)\n    \n                    // Check if the movie is in the movie watchlist\n                    const isMovieInMoviesWatchlist = moviesWatchlist.some(watchlistMovie => watchlistMovie.id == movie.id);\n                    // Check if the movie is in the series watchlist\n                    const isMovieInSeriesWatchlist = seriesWatchlist.some(watchlistSeries => watchlistSeries.id == movie.id);\n    \n                    // Update state based on whether the movie is in either list\n                    setIsInWatchlist(isMovieInMoviesWatchlist || isMovieInSeriesWatchlist);\n                } else {\n                    alert('Failed to fetch watchlist');\n                }\n            } catch (error) {\n                console.error('Error fetching watchlists', error);\n            } finally {\n                setLoading(false);\n            }\n        };\n    \n        fetchWatchlist();\n    }, []);\n\n    const handleAddMovieToWatchlist = async (e) => {\n        e.preventDefault();  \n        e.stopPropagation();\n\n        // Check if user information is still loading\n        if (isLoading) {\n            alert(\"Checking user status...\");\n            return;\n        }\n\n        // Ensure the user is logged in\n        if (!user) {\n            alert(\"Please log in to add movies to your watchlist.\");\n            return;\n        }\n\n        try {\n            const response = await httpClient.post('//localhost:8000/watchlist/movies/add', {\n                id: movie.id,\n                title: movie.title,\n                overview: movie.overview,\n                poster_path: movie.poster_path,\n                backdrop_path: movie.backdrop_path,\n                original_language: movie.original_language,\n                release_date: movie.release_date,\n                vote_average: movie.vote_average,\n                vote_count: movie.vote_count,\n                popularity: movie.popularity,\n                genre_ids: movie.genre_ids,\n            }, { withCredentials: true });\n\n\n            if (response.status === 201) {\n                setIsInWatchlist(true);\n            } else {\n                alert(response.data.error || 'Failed to add movie');\n            }\n        } catch (error) {\n            console.error(\"Error adding movie to watchlist: \", error);\n            alert(\"Failed to add movie to watchlist.\");\n        }\n    };\n\n    const handleAddSeriesToWatchlist = async (e) => {\n        e.preventDefault();  \n        e.stopPropagation();\n\n        if (isLoading) {\n            alert(\"Checking user status...\");\n            return;\n        }\n\n        if (!user) {\n            alert(\"Please log in to add series to your watchlist.\");\n            return;\n        }\n\n        try {\n            const response = await httpClient.post('//localhost:8000/watchlist/series/add', {\n                id: movie.id,\n                name: movie.name,\n                overview: movie.overview,\n                poster_path: movie.poster_path,\n                backdrop_path: movie.backdrop_path,\n                original_language: movie.original_language,\n                first_air_date: movie.first_air_date,\n                vote_average: movie.vote_average,\n                vote_count: movie.vote_count,\n                popularity: movie.popularity,\n                genre_ids: movie.genre_ids,\n            }, { withCredentials: true });\n\n            console.log(response.data);\n\n            if (response.status === 201) {\n                setIsInWatchlist(true);\n            } else {\n                alert(response.data.error || 'Failed to add series');\n            }\n        } catch (error) {\n            console.error(\"Error adding series to watchlist: \", error);\n            alert(\"Failed to add series to watchlist.\");\n        }\n    };\n\n    const handleRemoveMovieFromWatchlist = async (e) => {\n\n        e.preventDefault();  \n        e.stopPropagation();\n        const response = await httpClient.post('//localhost:8000/watchlist/movies/remove', {\n            id: movie.id\n        });\n\n        if (response.status === 200) {\n            setIsInWatchlist(false);\n        } else {\n            alert(response.data.error || 'Failed to remove movie');\n        }\n    };\n\n    const handleRemoveSeriesFromWatchlist = async (e) => {\n        e.preventDefault();  \n        e.stopPropagation();\n        \n        const response = await httpClient.post('//localhost:8000/watchlist/series/remove', {\n            id: movie.id\n        });\n\n        if (response.status === 200) {\n            setIsInWatchlist(false);\n        } else {\n            alert(response.data.error || 'Failed to remove series');\n        }\n    };\n\n    const toggleWatchlist = (e) => {\n        if (isInWatchlist) {\n            'release_date' in movie ?  handleRemoveMovieFromWatchlist(e) : handleRemoveSeriesFromWatchlist(e)\n        } else {\n            'release_date' in movie ?  handleAddMovieToWatchlist(e) : handleAddSeriesToWatchlist(e)\n        }\n    };\n\n    const watchlistLabel = isInWatchlist ? '-' : '+';\n      \n\n  return (\n    <Link\n        to={`${'release_date' in movie ?`/MovieDetail/${movie.id}`:`/SeriesDetail/${movie.id}`}`}\n        key={index}\n        layout\n        className={`group relative fade h-[220px] md:h-[220px] lg:h-[245px]  rounded-[7px] bg-[#16181f] cursor-pointer transition-transform duration-500 ${hovered && movie.id===hoveredMovieId?'lg:hover:scale-x-[1.7] lg:hover:scale-y-[1.4] lg:hover:z-[99]':''} ${index%6===0?'lg:origin-left':''} ${index%6===5 && index!==0? 'lg:origin-right':''} `}\n        onMouseEnter={()=>handleMouseEnter(movie.id)}\n        onMouseLeave={handleMouseLeave}>\n        <img loading='lazy' src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" className={`skeleton rounded-[5px] h-full w-full ${hovered && movie.id===hoveredMovieId?'lg:hidden':''}    `}/>\n        <img loading='lazy' src={`https://image.tmdb.org/t/p/w780${movie.backdrop_path}`} alt=\"\" className={`skeleton w-full object-cover rounded-[5px] h-[40%] absolute top-0 opacity-0 ${hovered && movie.id===hoveredMovieId?'lg:group-hover:opacity-100   lg:flex ':''} `}/>\n        <div className={`lg:mt-[50%] flex-col items-start justify-between h-[calc(60%-16px)] hidden w-full py-2 px-2 mt-1 ${hovered && movie.id===hoveredMovieId?'lg:group-hover:flex':''}`} >\n            <div className='flex gap-2 w-[95%]' >\n                <button\n                onClick={(e) => {\n                    e.preventDefault()\n                    e.stopPropagation();\n                    window.open(`https://www.youtube.com/watch?v=rcBntNCD4ZY`, '_blank');\n                }}\n                className='text-[8px] h-[30px] w-[135px] flex justify-center items-center gap-1 bg-[#d9d9da] rounded-[5px] lg:hover:scale-105 transition-all' >\n                    <img loading='lazy' src=\"/images/dark-blue-play.png\" alt=\"\" className='w-2 h-2'/>\n                    <span className='font-medium text-[#16181f]' >Watch Now</span>\n                </button>\n                <button onClick={(e) => toggleWatchlist(e)} className='text-[8px] h-[30px] w-[30px] flex justify-center items-center bg-[rgba(40,42,49,255)] rounded-[5px] text-white lg:hover:scale-105 transition-all ' >{watchlistLabel}</button>\n            </div>\n            <p className='font-bold text-[10px] text-[#d9d9da] py-1' >{'release_date' in movie ? movie.original_title : movie.name}</p>\n            <div className='w-[95%] flex flex-col gap-1' >\n                <div className='flex gap-1  items-center text-[8px] font-medium ' >\n                <span className='text-[#d9d9da] text-[8px]' >\n                    {'release_date' in movie \n                        ? (typeof(movie.release_date) === 'string' ? movie.release_date.slice(0, 4) : null)\n                        : (typeof(movie?.first_air_date) === 'string' ? movie.first_air_date.slice(0, 4) : null)\n                    }\n                </span>\n                    <span className='text-[#a2a3a5] text-[9px]' >•</span>\n                    {movie.genre_ids.slice(0, 2).map(genre_id => {\n                        return (\n                            <div className='flex gap-1 text-[8px]'>\n                                <span className='text-[#d9d9da]'>{'release_date' in movie  ?movie_genres[genre_id]:tv_genres[genre_id]}</span>\n                                <span className='text-[#a2a3a5]' >•</span>\n                            </div>\n                        )\n                    })}\n                    <div className='flex justify-center items-center text-[#d9d9da] gap-1' >\n                        <img loading='lazy' src=\"/images/star.png\" alt=\"\" className='w-2 h-2'/>\n                        <span className='text-[8px]' >{movie.vote_average && (movie.vote_average).toString().slice(0,3)}</span>\n                    </div>\n                </div>\n                <p className='text-[#7c849b] text-[7px] flex-grow-0 flex-shrink-0 w-full' >{movie.overview.split(' ').slice(0,22).join(' ')}</p>\n            </div>\n        </div>\n    </Link>\n  )\n}\n\nexport default SearchCard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}