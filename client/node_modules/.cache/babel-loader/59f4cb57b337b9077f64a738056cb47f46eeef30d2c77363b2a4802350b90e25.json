{"ast":null,"code":"var _jsxFileName = \"/Users/wassimmouloud/coding_projects/projet_web/client/src/pages/Watchlist.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport WatchlistCard from '../components/WatchlistCard';\nimport httpClient from '../httpClient';\nimport { Toaster, toast } from \"sonner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Watchlist({\n  hovered,\n  hoveredMovieId,\n  handleMouseEnter,\n  handleMouseLeave\n}) {\n  _s();\n  const [watchlistSeries, setWatchlistSeries] = useState([]);\n  const [watchlistMovies, setWatchlistMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fetchSeriesWatchlist = async () => {\n    try {\n      const response = await httpClient.get('https://disneyflask.onrender.com/watchlist/series');\n      if (response.status === 200) {\n        setWatchlistSeries(response.data);\n      } else {\n        alert('Failed to fetch series watchlist');\n      }\n    } catch (error) {\n      console.error('Error fetching series watchlist', error);\n    }\n  };\n  const fetchMoviesWatchlist = async () => {\n    try {\n      const response = await httpClient.get('https://disneyflask.onrender.com/watchlist/movies');\n      if (response.status === 200) {\n        setWatchlistMovies(response.data);\n      } else {\n        alert('Failed to fetch movies watchlist');\n      }\n    } catch (error) {\n      console.error('Error fetching movies watchlist', error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await fetchSeriesWatchlist();\n      await fetchMoviesWatchlist();\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lg:pb-14\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white  text-[20px] lg:text-[42px] text-center font-bold p-6 lg:p-8 lg:pl-[100px]\",\n      children: \"My watchlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white  text-[20px] font-semibold pl-6 lg:pl-[100px]\",\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen lg:w-[calc(100vw-100px)] xl:w-[calc(100vw-140px)] grid grid-cols-2 sm:grid-cols-3  md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7 gap-2  mb-[120px] lg:mb-0 p-6 lg:p-8 lg:pl-[100px]\",\n      children: watchlistSeries.map((movie, index) => {\n        return /*#__PURE__*/_jsxDEV(WatchlistCard, {\n          movie: movie,\n          index: index,\n          hovered: hovered,\n          hoveredMovieId: hoveredMovieId,\n          handleMouseEnter: handleMouseEnter,\n          handleMouseLeave: handleMouseLeave,\n          setWatchlistSeries: setWatchlistSeries,\n          setWatchlistMovies: setWatchlistMovies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-white  text-[20px] font-semibold pl-6  lg:pl-[100px]\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen lg:w-[calc(100vw-100px)] xl:w-[calc(100vw-140px)] grid grid-cols-2 sm:grid-cols-3  md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7 gap-2  mb-[120px] lg:mb-0 p-6 lg:p-8 lg:pl-[100px]\",\n      children: watchlistMovies.map((movie, index) => {\n        return /*#__PURE__*/_jsxDEV(WatchlistCard, {\n          movie: movie,\n          index: index,\n          hovered: hovered,\n          hoveredMovieId: hoveredMovieId,\n          handleMouseEnter: handleMouseEnter,\n          handleMouseLeave: handleMouseLeave,\n          setWatchlistSeries: setWatchlistSeries,\n          setWatchlistMovies: setWatchlistMovies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n      richColors: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Watchlist, \"XzlF+X6smXddiQVBGRPuVvaf4Gs=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","WatchlistCard","httpClient","Toaster","toast","jsxDEV","_jsxDEV","Watchlist","hovered","hoveredMovieId","handleMouseEnter","handleMouseLeave","_s","watchlistSeries","setWatchlistSeries","watchlistMovies","setWatchlistMovies","loading","setLoading","fetchSeriesWatchlist","response","get","status","data","alert","error","console","fetchMoviesWatchlist","fetchData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","index","richColors","_c","$RefreshReg$"],"sources":["/Users/wassimmouloud/coding_projects/projet_web/client/src/pages/Watchlist.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Navbar from '../components/Navbar'\nimport WatchlistCard from '../components/WatchlistCard'\nimport httpClient from '../httpClient';\nimport { Toaster, toast } from \"sonner\";\n\n\nfunction Watchlist({ hovered, hoveredMovieId, handleMouseEnter, handleMouseLeave}) {\n\n  const [watchlistSeries, setWatchlistSeries] = useState([]);\n  const [watchlistMovies, setWatchlistMovies] = useState([]);\n  const [loading, setLoading] = useState(true); \n\n  const fetchSeriesWatchlist = async () => {\n    try {\n      const response = await httpClient.get('https://disneyflask.onrender.com/watchlist/series');\n      if (response.status === 200) {\n        setWatchlistSeries(response.data);\n      } else {\n        alert('Failed to fetch series watchlist');\n      }\n    } catch (error) {\n      console.error('Error fetching series watchlist', error);\n    }\n  };\n\n  const fetchMoviesWatchlist = async () => {\n    try {\n      const response = await httpClient.get('https://disneyflask.onrender.com/watchlist/movies');\n      if (response.status === 200) {\n        setWatchlistMovies(response.data);\n      } else {\n        alert('Failed to fetch movies watchlist');\n      }\n    } catch (error) {\n      console.error('Error fetching movies watchlist', error);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await fetchSeriesWatchlist();\n      await fetchMoviesWatchlist();\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  \n\n  \n\n\n  return (\n    <div className='lg:pb-14' >\n        <Navbar/>\n        <p className='text-white  text-[20px] lg:text-[42px] text-center font-bold p-6 lg:p-8 lg:pl-[100px]' >My watchlist</p>\n        <p className='text-white  text-[20px] font-semibold pl-6 lg:pl-[100px]' >Series</p>\n        <div  className='w-screen lg:w-[calc(100vw-100px)] xl:w-[calc(100vw-140px)] grid grid-cols-2 sm:grid-cols-3  md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7 gap-2  mb-[120px] lg:mb-0 p-6 lg:p-8 lg:pl-[100px]' >\n            {watchlistSeries.map((movie, index)=>{\n                return(\n                    <WatchlistCard movie={movie} index={index}  hovered={hovered}  hoveredMovieId={hoveredMovieId}  handleMouseEnter={handleMouseEnter} handleMouseLeave={handleMouseLeave}  setWatchlistSeries={setWatchlistSeries} setWatchlistMovies={setWatchlistMovies} />\n                )\n            })}\n        </div>\n        <p className='text-white  text-[20px] font-semibold pl-6  lg:pl-[100px]' >Movies</p>\n        <div  className='w-screen lg:w-[calc(100vw-100px)] xl:w-[calc(100vw-140px)] grid grid-cols-2 sm:grid-cols-3  md:grid-cols-4 lg:grid-cols-5 xl:grid-cols-6 2xl:grid-cols-7 gap-2  mb-[120px] lg:mb-0 p-6 lg:p-8 lg:pl-[100px]' >\n            {watchlistMovies.map((movie, index)=>{\n                return(\n                    <WatchlistCard movie={movie} index={index}  hovered={hovered}  hoveredMovieId={hoveredMovieId}  handleMouseEnter={handleMouseEnter} handleMouseLeave={handleMouseLeave} setWatchlistSeries={setWatchlistSeries} setWatchlistMovies={setWatchlistMovies} />\n                )\n            })}\n        </div>\n        <Toaster richColors />\n    </div>\n  )\n}\n\nexport default Watchlist"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}